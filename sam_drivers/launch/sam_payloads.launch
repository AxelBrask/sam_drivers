<launch>

  <arg name="namespace" default="sam"/>

  <!-- SSS params -->
  <arg name="sss_ip" default="192.168.2.63"/>
  <arg name="sss_port" default="57349"/>
  <arg name="sss_out_file" default="test.dvs"/>
  <arg name="high_freq" default="false"/>
  <arg name="range" default="40.0"/>
  
  <group ns="$(arg namespace)">
    <node pkg="deepvision_sss_driver" type="driver_node" name="sss_driver_node" output="screen">
      <param name="ip" value="$(arg sss_ip)"/>
      <param name="port" value="$(arg sss_port)"/>
      <param name="out_file" value="$(arg sss_out_file)"/>
      <param name="high_freq" value="$(arg high_freq)"/>
      <param name="range" value="$(arg range)"/>
    </node>

  <group ns="payload">

  <!-- board cam -->
  <node name="cam_port" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <rosparam command="load" file="$(find sam_drivers)/config/cam_port.yml"/>
  </node>

  <!-- <node pkg="rosservice" type="rosservice" name="stop_cam" args="call /sam/payload/cam_port/stop_capture {}" /> -->

  <!-- starboard cam -->
  <node name="cam_starboard" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <rosparam command="load" file="$(find sam_drivers)/config/cam_starboard.yml"/>
  </node>

  <!-- <node pkg="rosservice" type="rosservice" name="stop_cam" args="call /sam/payload/cam_starboard/stop_capture {}" /> -->

  </group>
  </group>

</launch>
